(()=>{var n,e={2466:(n,e,r)=>{"use strict";r(6086),r(1561),r(4039),r(4527);var t=r(3379),o=r.n(t),i=r(7795),a=r.n(i),c=r(569),u=r.n(c),s=r(3565),l=r.n(s),p=r(9216),f=r.n(p),d=r(4589),h=r.n(d),A=r(1402),b={};function y(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}b.styleTagTransform=h(),b.setAttributes=l(),b.insert=u().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=f(),o()(A.Z,b),A.Z&&A.Z.locals&&A.Z.locals,r.p;var m="d5c7ec277cmshaab8078ec86ed58p1722bajsnbf2f14c09a13";const g=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}var e,r;return e=n,r=[{key:"searchNews",value:function(n){return n?fetch("https://bing-news-search1.p.rapidapi.com/news/search?q=".concat(n,"&freshness=Day&textFormat=Raw&safeSearch=Off"),{method:"GET",headers:{"x-bingapis-sdk":"true","x-rapidapi-host":"bing-news-search1.p.rapidapi.com","x-rapidapi-key":m}}).then((function(n){return n.json()})).then((function(e){return e.value?0===e.value.length?Promise.reject("".concat(n," doesn't exist")):Promise.resolve(e.value):Promise.reject("".concat(n," something went wrong"))})):fetch("https://bing-news-search1.p.rapidapi.com/news?safeSearch=Off&textFormat=Raw",{method:"GET",headers:{"x-bingapis-sdk":"true","x-rapidapi-host":"bing-news-search1.p.rapidapi.com","x-rapidapi-key":m}}).then((function(n){return n.json()})).then((function(e){return e.value?Promise.resolve(e.value):Promise.reject("".concat(n," doesn't exist"))}))}}],null&&y(e.prototype,null),r&&y(e,r),n}();function w(n,e,r,t,o,i,a){try{var c=n[i](a),u=c.value}catch(n){return void r(n)}c.done?e(u):Promise.resolve(u).then(t,o)}function v(n){return function(){var e=this,r=arguments;return new Promise((function(t,o){var i=n.apply(e,r);function a(n){w(i,t,o,a,c,"next",n)}function c(n){w(i,t,o,a,c,"throw",n)}a(void 0)}))}}r(1064),r(2824),r(5786);r.p,r.p,r.p,r.p,r.p,r.p,document.addEventListener("DOMContentLoaded",(function(){var n=document.querySelector("search-bar"),e=document.querySelector("#newsContent"),r=document.querySelectorAll(".category-item"),t=document.querySelector("#newsTitle"),o=function(){var r=v(regeneratorRuntime.mark((function r(){var t,o;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(t=document.querySelector("news-list"),!e.hasChildNodes){r.next=14;break}return t.remove(),s(),r.prev=4,r.next=7,g.searchNews(n.value);case 7:o=r.sent,a(o),r.next=14;break;case 11:r.prev=11,r.t0=r.catch(4),c(r.t0);case 14:case"end":return r.stop()}}),r,null,[[4,11]])})));return function(){return r.apply(this,arguments)}}(),i=function(){var n=v(regeneratorRuntime.mark((function n(r){var o,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(o=document.querySelector("news-list"),!e.hasChildNodes){n.next=15;break}return o.remove(),s(),n.prev=4,n.next=7,g.searchNews(r.target.innerText);case 7:i=n.sent,a(i),t.innerHTML="".concat(r.target.innerText,' News <span class="badge bg-danger">New</span>'),n.next=15;break;case 12:n.prev=12,n.t0=n.catch(4),c(n.t0);case 15:case"end":return n.stop()}}),n,null,[[4,12]])})));return function(e){return n.apply(this,arguments)}}(),a=function(e){document.querySelector("news-list").news=e,n.value?t.innerText='"'.concat(n.value,'" News'):t.innerText="Latest News"},c=function(n){document.querySelector("news-list").renderError(n)},u=function(){var n=v(regeneratorRuntime.mark((function n(){var e;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,g.searchNews();case 3:e=n.sent,a(e),n.next=10;break;case 7:n.prev=7,n.t0=n.catch(0),c(n.t0);case 10:case"end":return n.stop()}}),n,null,[[0,7]])})));return function(){return n.apply(this,arguments)}}(),s=function(){var n=document.createElement("news-list");e.appendChild(n)};r.forEach((function(n){n.addEventListener("click",i)})),n.clickEvent=o,s(),u()}))},5786:()=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n(e)}function e(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function r(e,r){if(r&&("object"===n(r)||"function"==typeof r))return r;if(void 0!==r)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(e)}function t(n){var e="function"==typeof Map?new Map:void 0;return t=function(n){if(null===n||(r=n,-1===Function.toString.call(r).indexOf("[native code]")))return n;var r;if("function"!=typeof n)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(n))return e.get(n);e.set(n,t)}function t(){return o(n,arguments,c(this).constructor)}return t.prototype=Object.create(n.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),a(t,n)},t(n)}function o(n,e,r){return o=i()?Reflect.construct:function(n,e,r){var t=[null];t.push.apply(t,e);var o=new(Function.bind.apply(n,t));return r&&a(o,r.prototype),o},o.apply(null,arguments)}function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}function a(n,e){return a=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},a(n,e)}function c(n){return c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},c(n)}var u=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&a(n,e)}(p,n);var t,o,u,s,l=(t=p,o=i(),function(){var n,e=c(t);if(o){var i=c(this).constructor;n=Reflect.construct(e,arguments,i)}else n=e.apply(this,arguments);return r(this,n)});function p(){var n;return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,p),(n=l.call(this)).shadowDOM=n.attachShadow({mode:"open"}),n}return u=p,(s=[{key:"news",set:function(n){this._news=n,this.render()}},{key:"render",value:function(){var n=this._news,e=n.description,r=n.image,t=(r=void 0===r?"assets/images/not_found_image.jpg":r).thumbnail.contentUrl,o=n.name,i=n.url;this.shadowDOM.innerHTML='\n    <style>\n        .card__container{\n          text-decoration: none;\n          color: black;\n        }\n        .card{\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            flex-direction: flex-row;\n            max-width:400px;\n            max-height: 550px;\n            border-radius: 30px;\n            margin: 10px 10px;\n            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n            transition: 0.3s;\n            padding: 5px;\n\n        }\n        .card:hover{\n          box-shadow: 0 8px 16px 0 rgba(0,0,0,0.5);\n        }\n        .btn__redirect{\n          border-top: 1px solid black;\n          padding: 10px;\n          border-bottom-left-radius : 30px;\n          border-bottom-right-radius : 30px;\n        }\n        .btn__redirect:hover{\n          background: black;\n          color:white;\n          box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n        }\n        .image__container {\n          border-top-left-radius : 30px;\n          border-top-right-radius : 30px;\n\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          overflow: hidden;\n          width:100%;\n          height:300px;\n      }\n      .image__container img {\n        object-fit: cover;\n          flex-shrink: 0;\n          min-width: 100%;\n          min-height: 100%\n      }\n        @media only screen and (max-width: 600px) {\n            .card{\n                max-width:100%;\n            }\n          }\n    </style>\n    \n    <a class="card__container" href='.concat(i,'>\n      <div class="card">\n          <div class="image__container">\n              <img src=').concat(t,'></img>\n          </div>\n          <h3 id="title">').concat(o.substr(0,70),"...</h3>\n          <p>").concat(e.substr(0,150),'..</p>\n          <div class="btn__redirect">\n            <strong>Read More</strong>\n          </div>\n      </div>\n    </a>\n      ')}}])&&e(u.prototype,s),p}(t(HTMLElement));customElements.define("news-card",u)},1064:()=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n(e)}function e(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function r(e,r){if(r&&("object"===n(r)||"function"==typeof r))return r;if(void 0!==r)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(e)}function t(n){var e="function"==typeof Map?new Map:void 0;return t=function(n){if(null===n||(r=n,-1===Function.toString.call(r).indexOf("[native code]")))return n;var r;if("function"!=typeof n)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(n))return e.get(n);e.set(n,t)}function t(){return o(n,arguments,c(this).constructor)}return t.prototype=Object.create(n.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),a(t,n)},t(n)}function o(n,e,r){return o=i()?Reflect.construct:function(n,e,r){var t=[null];t.push.apply(t,e);var o=new(Function.bind.apply(n,t));return r&&a(o,r.prototype),o},o.apply(null,arguments)}function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}function a(n,e){return a=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},a(n,e)}function c(n){return c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},c(n)}var u=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&a(n,e)}(p,n);var t,o,u,s,l=(t=p,o=i(),function(){var n,e=c(t);if(o){var i=c(this).constructor;n=Reflect.construct(e,arguments,i)}else n=e.apply(this,arguments);return r(this,n)});function p(){var n;return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,p),(n=l.call(this)).shadowDOM=n.attachShadow({mode:"open"}),n}return u=p,(s=[{key:"news",set:function(n){this._news=n,this.render()}},{key:"render",value:function(){var n=this;this._news.forEach((function(e){var r=document.createElement("news-card");r.news=e,n.shadowDOM.appendChild(r)}))}},{key:"renderError",value:function(n){this.shadowDOM.innerHTML="\n    <style>\n         .placeholder {\n               font-weight: lighter;\n               color: rgba(0,0,0,0.5);\n               -webkit-user-select: none;\n               -moz-user-select: none;\n               -ms-user-select: none;\n               user-select: none;\n           }\n    </style>",this.shadowDOM.innerHTML+='<h2 class="placeholder">'.concat(n,"</h2>")}}])&&e(u.prototype,s),p}(t(HTMLElement));customElements.define("news-list",u)},2824:()=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n(e)}function e(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function r(e,r){if(r&&("object"===n(r)||"function"==typeof r))return r;if(void 0!==r)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(e)}function t(n){var e="function"==typeof Map?new Map:void 0;return t=function(n){if(null===n||(r=n,-1===Function.toString.call(r).indexOf("[native code]")))return n;var r;if("function"!=typeof n)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(n))return e.get(n);e.set(n,t)}function t(){return o(n,arguments,c(this).constructor)}return t.prototype=Object.create(n.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),a(t,n)},t(n)}function o(n,e,r){return o=i()?Reflect.construct:function(n,e,r){var t=[null];t.push.apply(t,e);var o=new(Function.bind.apply(n,t));return r&&a(o,r.prototype),o},o.apply(null,arguments)}function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}function a(n,e){return a=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},a(n,e)}function c(n){return c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},c(n)}var u=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&a(n,e)}(p,n);var t,o,u,s,l=(t=p,o=i(),function(){var n,e=c(t);if(o){var i=c(this).constructor;n=Reflect.construct(e,arguments,i)}else n=e.apply(this,arguments);return r(this,n)});function p(){var n;return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,p),(n=l.call(this)).shadowDOM=n.attachShadow({mode:"open"}),n}return u=p,(s=[{key:"connectedCallback",value:function(){this.render()}},{key:"clickEvent",set:function(n){this._clickEvent=n,this.render()}},{key:"value",get:function(){return this.shadowDOM.querySelector("#searchElement").value}},{key:"render",value:function(){this.shadowDOM.innerHTML='\n       <style>\n       .search-container {\n           max-width: 900px;\n           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n           padding: 16px;\n           border-radius: 5px;\n           display: flex;\n           position: sticky;\n           top: 10px;\n           background-color: white;\n       }\n      \n       .search-container > input {\n           width: 100%;\n           padding: 16px;\n           border: 0;\n           border-bottom: 1px solid black;\n           font-weight: bold;\n       }\n      \n       .search-container > input:focus {\n           outline: 0;\n           border-bottom: 2px solid black;\n       }\n      \n       .search-container > input:focus::placeholder {\n           font-weight: bold;\n       }\n      \n       .search-container >  input::placeholder {\n           color: black;\n           font-weight: normal;\n       }\n      \n       .search-container > button {\n           width: 30%;\n           cursor: pointer;\n           margin-left: auto;\n           padding: 16px;\n           background-color: gray;\n           color: white;\n           border: 0;\n           text-transform: uppercase;\n       }\n       .search-container > button:hover {\n           background: black;\n           color : white;\n    }\n      \n       @media screen and (max-width: 550px){\n           .search-container {\n               flex-direction: column;\n               position: static;\n           }\n      \n           .search-container > input {\n               width: 100%;\n               margin-bottom: 12px;\n           }\n      \n           .search-container > button {\n               width: 100%;\n           }\n       }\n       </style>\n       <div id="search-container" class="search-container">\n           <input placeholder="Search Specific news" id="searchElement" type="search">\n           <button id="searchButtonElement" type="submit">Search</button>\n       </div>\n       ',this.shadowDOM.querySelector("#searchButtonElement").addEventListener("click",this._clickEvent)}}])&&e(u.prototype,s),p}(t(HTMLElement));customElements.define("search-bar",u)},1402:(n,e,r)=>{"use strict";r.d(e,{Z:()=>c});var t=r(2710),o=r.n(t),i=r(6929),a=r.n(i)()(o());a.push([n.id,"header {\r\n  position: -webkit-sticky; /* Safari */\r\n  z-index: 2;\r\n  position: sticky;\r\n  top: 0;\r\n  margin-bottom: 7px;\r\n}\r\nbody::-webkit-scrollbar {\r\n  display: none;\r\n}\r\nli {\r\n  cursor: pointer;\r\n}\r\n#image__container {\r\n  max-width: 110px;\r\n  max-height: 30px;\r\n  overflow: hidden;\r\n  background: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  object-fit: fit;\r\n}\r\n\r\n.img-carousel {\r\n  object-fit: cover;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  opacity: 0.9;\r\n}\r\n#newsTitle {\r\n  margin: 2% 5%;\r\n  padding: 10px;\r\n  border-bottom: 2px solid gray;\r\n}\r\nnews-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n#searchBar {\r\n  width: 400px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.icon {\r\n  position: relative;\r\n  bottom: 50px;\r\n  left: 80px;\r\n  padding: 10px;\r\n  border-radius: 100px;\r\n  border: 2px solid black;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  width: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.card {\r\n  margin-top: 90px;\r\n  border-radius: 30px;\r\n  margin-left: 1%;\r\n}\r\n.card-body {\r\n  position: relative;\r\n  bottom: 35px;\r\n  max-height: 200px;\r\n}\r\n.card:hover {\r\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.5);\r\n}\r\n.card-body > a {\r\n  margin-top: 10px;\r\n}\r\n#about__card {\r\n  background: yellow;\r\n  max-width: 90%;\r\n  border: 2px solid black;\r\n  margin: 2% auto;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 30px;\r\n}\r\n#profile__image {\r\n  max-width: 200px;\r\n  max-height: 200px;\r\n  border-radius: 100px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: yellow;\r\n  margin: auto 0;\r\n}\r\n\r\n.footer a {\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n.footer li {\r\n  list-style-type: none;\r\n}\r\n\r\n#contact__me i {\r\n  margin: 5px;\r\n}\r\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,wBAAwB,EAAE,WAAW;EACrC,UAAU;EACV,gBAAgB;EAChB,MAAM;EACN,kBAAkB;AACpB;AACA;EACE,aAAa;AACf;AACA;EACE,eAAe;AACjB;AACA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,YAAY;AACd;AACA;EACE,aAAa;EACb,aAAa;EACb,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,aAAa;EACb,oBAAoB;EACpB,uBAAuB;EACvB,0CAA0C;EAC1C,YAAY;EACZ,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;AACnB;AACA;EACE,2CAA2C;AAC7C;AACA;EACE,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,cAAc;EACd,uBAAuB;EACvB,eAAe;EACf,0CAA0C;EAC1C,mBAAmB;AACrB;AACA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,oBAAoB;EACpB,gBAAgB;EAChB,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;AACA;EACE,qBAAqB;AACvB;;AAEA;EACE,WAAW;AACb",sourcesContent:["header {\r\n  position: -webkit-sticky; /* Safari */\r\n  z-index: 2;\r\n  position: sticky;\r\n  top: 0;\r\n  margin-bottom: 7px;\r\n}\r\nbody::-webkit-scrollbar {\r\n  display: none;\r\n}\r\nli {\r\n  cursor: pointer;\r\n}\r\n#image__container {\r\n  max-width: 110px;\r\n  max-height: 30px;\r\n  overflow: hidden;\r\n  background: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  object-fit: fit;\r\n}\r\n\r\n.img-carousel {\r\n  object-fit: cover;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  opacity: 0.9;\r\n}\r\n#newsTitle {\r\n  margin: 2% 5%;\r\n  padding: 10px;\r\n  border-bottom: 2px solid gray;\r\n}\r\nnews-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n#searchBar {\r\n  width: 400px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.icon {\r\n  position: relative;\r\n  bottom: 50px;\r\n  left: 80px;\r\n  padding: 10px;\r\n  border-radius: 100px;\r\n  border: 2px solid black;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  width: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.card {\r\n  margin-top: 90px;\r\n  border-radius: 30px;\r\n  margin-left: 1%;\r\n}\r\n.card-body {\r\n  position: relative;\r\n  bottom: 35px;\r\n  max-height: 200px;\r\n}\r\n.card:hover {\r\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.5);\r\n}\r\n.card-body > a {\r\n  margin-top: 10px;\r\n}\r\n#about__card {\r\n  background: yellow;\r\n  max-width: 90%;\r\n  border: 2px solid black;\r\n  margin: 2% auto;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 30px;\r\n}\r\n#profile__image {\r\n  max-width: 200px;\r\n  max-height: 200px;\r\n  border-radius: 100px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: yellow;\r\n  margin: auto 0;\r\n}\r\n\r\n.footer a {\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n.footer li {\r\n  list-style-type: none;\r\n}\r\n\r\n#contact__me i {\r\n  margin: 5px;\r\n}\r\n"],sourceRoot:""}]);const c=a}},r={};function t(n){var o=r[n];if(void 0!==o)return o.exports;var i=r[n]={id:n,loaded:!1,exports:{}};return e[n](i,i.exports,t),i.loaded=!0,i.exports}t.m=e,n=[],t.O=(e,r,o,i)=>{if(!r){var a=1/0;for(l=0;l<n.length;l++){for(var[r,o,i]=n[l],c=!0,u=0;u<r.length;u++)(!1&i||a>=i)&&Object.keys(t.O).every((n=>t.O[n](r[u])))?r.splice(u--,1):(c=!1,i<a&&(a=i));if(c){n.splice(l--,1);var s=o();void 0!==s&&(e=s)}}return e}i=i||0;for(var l=n.length;l>0&&n[l-1][2]>i;l--)n[l]=n[l-1];n[l]=[r,o,i]},t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.nmd=n=>(n.paths=[],n.children||(n.children=[]),n),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{t.b=document.baseURI||self.location.href;var n={376:0};t.O.j=e=>0===n[e];var e=(e,r)=>{var o,i,[a,c,u]=r,s=0;if(a.some((e=>0!==n[e]))){for(o in c)t.o(c,o)&&(t.m[o]=c[o]);if(u)var l=u(t)}for(e&&e(r);s<a.length;s++)i=a[s],t.o(n,i)&&n[i]&&n[i][0](),n[a[s]]=0;return t.O(l)},r=self.webpackChunkproyekmodul3mk4=self.webpackChunkproyekmodul3mk4||[];r.forEach(e.bind(null,0)),r.push=e.bind(null,r.push.bind(r))})();var o=t.O(void 0,[743,458,289,349,791],(()=>t(2466)));o=t.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,